body {
	background-color: #ededed;
	color: #272727;
	font-family: 'Work Sans', sans-serif;
}

.header {
	position: relative;
	z-index: 1;
	font-size: 40px;
	line-height: 1;
	margin: 18px 0;
}

.content-container {
	box-sizing: border-box;
	width: 100%;
	max-width: 248px;
	padding: 12px;
	margin: 24px auto;
	position: relative;
	background-image: url("./background.png");
	background-size: 106%;
	background-position: 0 0;
	background-repeat: no-repeat;
}

.frames-container {
	width: 52px;
	height: 52px;
	border-radius: 50%;
	position: absolute;
	top: 76px;
	left: 133px;
	overflow: hidden;
	border: 1px solid white;

	-webkit-transition: all .5s ease-in-out;
	-moz-transition: all .5s ease-in-out;
	transition: all .5s ease-in-out;

	-webkit-animation: orbit 200s linear infinite;
	-moz-animation: orbit 200s linear infinite;
	animation: orbit 200s linear infinite;
}

.jimmy-frame {
	position: absolute;
	width: 100%;
	height: 100%;
	border-radius: 50%;
	opacity: 0;

	-webkit-transition: all .5s ease-in-out;
	-moz-transition: all .5s ease-in-out;
	transition: all .5s ease-in-out;
}

.jimmy-frame.active {
	opacity: 1;
}

.links-container {
	position: relative;
	z-index: 1;
	display: flex;
	list-style-type: none;
	padding: 0;
}

.link-item {
	display: flex;
	justify-content: center;
	align-content: center;
	border: 2px solid #272727;
	border-radius: 50%;
	width: 32px;
	height: 32px;
	margin-right: 8px;
	transition: .2s;
}

.link-item:hover {
	background-color: #d4d3d3;
}

.link-anchor {
	width: 24px;
	height: 24px;
	margin: auto;
}

.link-anchor svg {
	display: flex;
	justify-content: center;
	align-items: center;
}

:root {
	--orbitDistance: 80px;
}

@-webkit-keyframes orbit {
	from {
		-webkit-transform: rotate(0deg) translateX(var(--orbitDistance)) rotate(0deg);
	}

	to {
		-webkit-transform: rotate(360deg) translateX(var(--orbitDistance)) rotate(-360deg);
	}
}

@-moz-keyframes orbit {
	from {
		-moz-transform: rotate(0deg) translateX(var(--orbitDistance)) rotate(0deg);
	}

	to {
		-moz-transform: rotate(360deg) translateX(var(--orbitDistance)) rotate(-360deg);
	}
}

@keyframes orbit {
	from {
		transform: rotate(0deg) translateX(var(--orbitDistance)) rotate(0deg);
	}

	to {
		transform: rotate(360deg) translateX(var(--orbitDistance)) rotate(-360deg);
	}
}